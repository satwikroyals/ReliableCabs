//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReliableCabs.edmx
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ReliablecabsEntities : DbContext
    {
        public ReliablecabsEntities()
            : base("name=ReliablecabsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CashCollected> CashCollecteds { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<ClientReturnTran> ClientReturnTrans { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<PeriodType> PeriodTypes { get; set; }
        public virtual DbSet<RentHold> RentHolds { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<SubscriptionTran> SubscriptionTrans { get; set; }
        public virtual DbSet<LoanTran> LoanTrans { get; set; }
        public virtual DbSet<Subscription> Subscriptions { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> AddCashCollectedDetails(Nullable<decimal> cashamount, string refNo)
        {
            var cashamountParameter = cashamount.HasValue ?
                new ObjectParameter("Cashamount", cashamount) :
                new ObjectParameter("Cashamount", typeof(decimal));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddCashCollectedDetails", cashamountParameter, refNoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddClientDetails(string firstName, string lastName, string mobile, string email, string driverLicenceNo, string bankDetails, string simNumber, string namePlateNumber, string physicalAddress, string otherInfo)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var driverLicenceNoParameter = driverLicenceNo != null ?
                new ObjectParameter("DriverLicenceNo", driverLicenceNo) :
                new ObjectParameter("DriverLicenceNo", typeof(string));
    
            var bankDetailsParameter = bankDetails != null ?
                new ObjectParameter("BankDetails", bankDetails) :
                new ObjectParameter("BankDetails", typeof(string));
    
            var simNumberParameter = simNumber != null ?
                new ObjectParameter("SimNumber", simNumber) :
                new ObjectParameter("SimNumber", typeof(string));
    
            var namePlateNumberParameter = namePlateNumber != null ?
                new ObjectParameter("NamePlateNumber", namePlateNumber) :
                new ObjectParameter("NamePlateNumber", typeof(string));
    
            var physicalAddressParameter = physicalAddress != null ?
                new ObjectParameter("PhysicalAddress", physicalAddress) :
                new ObjectParameter("PhysicalAddress", typeof(string));
    
            var otherInfoParameter = otherInfo != null ?
                new ObjectParameter("OtherInfo", otherInfo) :
                new ObjectParameter("OtherInfo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddClientDetails", firstNameParameter, lastNameParameter, mobileParameter, emailParameter, driverLicenceNoParameter, bankDetailsParameter, simNumberParameter, namePlateNumberParameter, physicalAddressParameter, otherInfoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddClientReturnTransDetails(Nullable<int> clientId, Nullable<int> subTransId, Nullable<decimal> cashAmount, Nullable<decimal> chequeAmount, string chequeNumber, Nullable<decimal> onlineAmount, Nullable<decimal> advanceAdjustment, Nullable<decimal> loanToDriver, string remarks)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var subTransIdParameter = subTransId.HasValue ?
                new ObjectParameter("SubTransId", subTransId) :
                new ObjectParameter("SubTransId", typeof(int));
    
            var cashAmountParameter = cashAmount.HasValue ?
                new ObjectParameter("CashAmount", cashAmount) :
                new ObjectParameter("CashAmount", typeof(decimal));
    
            var chequeAmountParameter = chequeAmount.HasValue ?
                new ObjectParameter("ChequeAmount", chequeAmount) :
                new ObjectParameter("ChequeAmount", typeof(decimal));
    
            var chequeNumberParameter = chequeNumber != null ?
                new ObjectParameter("ChequeNumber", chequeNumber) :
                new ObjectParameter("ChequeNumber", typeof(string));
    
            var onlineAmountParameter = onlineAmount.HasValue ?
                new ObjectParameter("OnlineAmount", onlineAmount) :
                new ObjectParameter("OnlineAmount", typeof(decimal));
    
            var advanceAdjustmentParameter = advanceAdjustment.HasValue ?
                new ObjectParameter("AdvanceAdjustment", advanceAdjustment) :
                new ObjectParameter("AdvanceAdjustment", typeof(decimal));
    
            var loanToDriverParameter = loanToDriver.HasValue ?
                new ObjectParameter("LoanToDriver", loanToDriver) :
                new ObjectParameter("LoanToDriver", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddClientReturnTransDetails", clientIdParameter, subTransIdParameter, cashAmountParameter, chequeAmountParameter, chequeNumberParameter, onlineAmountParameter, advanceAdjustmentParameter, loanToDriverParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddLoginDetails(string name, string password, string email, string mobile)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddLoginDetails", nameParameter, passwordParameter, emailParameter, mobileParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddRentHoldDetails(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddRentHoldDetails", clientIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSubscription(Nullable<int> clientId, string terminal, Nullable<int> statusId, Nullable<System.DateTime> subscriptionStartDate, Nullable<decimal> rentAmount, Nullable<int> periodTypeId, Nullable<System.DateTime> subscriptionEndDate, string notes, Nullable<decimal> efposServiceCharge, Nullable<decimal> chitsCommission, Nullable<decimal> loanAmount, Nullable<System.DateTime> loanDate)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var subscriptionStartDateParameter = subscriptionStartDate.HasValue ?
                new ObjectParameter("SubscriptionStartDate", subscriptionStartDate) :
                new ObjectParameter("SubscriptionStartDate", typeof(System.DateTime));
    
            var rentAmountParameter = rentAmount.HasValue ?
                new ObjectParameter("RentAmount", rentAmount) :
                new ObjectParameter("RentAmount", typeof(decimal));
    
            var periodTypeIdParameter = periodTypeId.HasValue ?
                new ObjectParameter("PeriodTypeId", periodTypeId) :
                new ObjectParameter("PeriodTypeId", typeof(int));
    
            var subscriptionEndDateParameter = subscriptionEndDate.HasValue ?
                new ObjectParameter("SubscriptionEndDate", subscriptionEndDate) :
                new ObjectParameter("SubscriptionEndDate", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var efposServiceChargeParameter = efposServiceCharge.HasValue ?
                new ObjectParameter("EfposServiceCharge", efposServiceCharge) :
                new ObjectParameter("EfposServiceCharge", typeof(decimal));
    
            var chitsCommissionParameter = chitsCommission.HasValue ?
                new ObjectParameter("ChitsCommission", chitsCommission) :
                new ObjectParameter("ChitsCommission", typeof(decimal));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            var loanDateParameter = loanDate.HasValue ?
                new ObjectParameter("LoanDate", loanDate) :
                new ObjectParameter("LoanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSubscription", clientIdParameter, terminalParameter, statusIdParameter, subscriptionStartDateParameter, rentAmountParameter, periodTypeIdParameter, subscriptionEndDateParameter, notesParameter, efposServiceChargeParameter, chitsCommissionParameter, loanAmountParameter, loanDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSubscriptionTransDetails(Nullable<int> subscriptionId, Nullable<decimal> efposAmount, Nullable<decimal> chitsAmount, Nullable<decimal> rentAmount, Nullable<decimal> eftposCommCharge, Nullable<decimal> chitsCommCharge, string comments)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(int));
    
            var efposAmountParameter = efposAmount.HasValue ?
                new ObjectParameter("EfposAmount", efposAmount) :
                new ObjectParameter("EfposAmount", typeof(decimal));
    
            var chitsAmountParameter = chitsAmount.HasValue ?
                new ObjectParameter("ChitsAmount", chitsAmount) :
                new ObjectParameter("ChitsAmount", typeof(decimal));
    
            var rentAmountParameter = rentAmount.HasValue ?
                new ObjectParameter("RentAmount", rentAmount) :
                new ObjectParameter("RentAmount", typeof(decimal));
    
            var eftposCommChargeParameter = eftposCommCharge.HasValue ?
                new ObjectParameter("EftposCommCharge", eftposCommCharge) :
                new ObjectParameter("EftposCommCharge", typeof(decimal));
    
            var chitsCommChargeParameter = chitsCommCharge.HasValue ?
                new ObjectParameter("ChitsCommCharge", chitsCommCharge) :
                new ObjectParameter("ChitsCommCharge", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSubscriptionTransDetails", subscriptionIdParameter, efposAmountParameter, chitsAmountParameter, rentAmountParameter, eftposCommChargeParameter, chitsCommChargeParameter, commentsParameter);
        }
    
        public virtual ObjectResult<GetCashFundDetails_Result> GetCashFundDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCashFundDetails_Result>("GetCashFundDetails");
        }
    
        public virtual ObjectResult<GetCashReturnDetails_Result> GetCashReturnDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCashReturnDetails_Result>("GetCashReturnDetails");
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetCashtotal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetCashtotal");
        }
    
        public virtual int GetChitsPaymentHistory(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetChitsPaymentHistory", clientIdParameter);
        }
    
        public virtual ObjectResult<GetCommissionDetails_Result> GetCommissionDetails(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCommissionDetails_Result>("GetCommissionDetails", clientIdParameter);
        }
    
        public virtual ObjectResult<GetDriverDetailsbyStatus_Result> GetDriverDetailsbyStatus(Nullable<int> statusId)
        {
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDriverDetailsbyStatus_Result>("GetDriverDetailsbyStatus", statusIdParameter);
        }
    
        public virtual ObjectResult<getdriversdetails_Result> getdriversdetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getdriversdetails_Result>("getdriversdetails");
        }
    
        public virtual int GetEftposPaymentHistory(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEftposPaymentHistory", clientIdParameter);
        }
    
        public virtual ObjectResult<GetLoanAdjustmentDetails_Result> GetLoanAdjustmentDetails(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoanAdjustmentDetails_Result>("GetLoanAdjustmentDetails", clientIdParameter);
        }
    
        public virtual ObjectResult<GetRentPaymentHistory_Result> GetRentPaymentHistory(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRentPaymentHistory_Result>("GetRentPaymentHistory", clientIdParameter);
        }
    
        public virtual ObjectResult<GetSubscriptionDetails_Result> GetSubscriptionDetails(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubscriptionDetails_Result>("GetSubscriptionDetails", clientIdParameter);
        }
    
        public virtual ObjectResult<GetSubTransById_Result> GetSubTransById(Nullable<int> subTransId)
        {
            var subTransIdParameter = subTransId.HasValue ?
                new ObjectParameter("SubTransId", subTransId) :
                new ObjectParameter("SubTransId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubTransById_Result>("GetSubTransById", subTransIdParameter);
        }
    
        public virtual ObjectResult<GetTotalTransPayment_Result> GetTotalTransPayment(Nullable<int> subscriptionId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalTransPayment_Result>("GetTotalTransPayment", subscriptionIdParameter);
        }
    
        public virtual ObjectResult<GetTransDetails_Result> GetTransDetails(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransDetails_Result>("GetTransDetails", clientIdParameter);
        }
    
        public virtual ObjectResult<RptAllSubTransDetails_Result> RptAllSubTransDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAllSubTransDetails_Result>("RptAllSubTransDetails");
        }
    
        public virtual ObjectResult<RptdashboardmonthTrans_Result> RptdashboardmonthTrans()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptdashboardmonthTrans_Result>("RptdashboardmonthTrans");
        }
    
        public virtual ObjectResult<RptdashboardTrans_Result> RptdashboardTrans()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptdashboardTrans_Result>("RptdashboardTrans");
        }
    
        public virtual ObjectResult<RptListDriverDetails_Result> RptListDriverDetails(Nullable<int> statusID)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptListDriverDetails_Result>("RptListDriverDetails", statusIDParameter);
        }
    
        public virtual ObjectResult<RptSubTransDetails_Result> RptSubTransDetails(Nullable<int> clientId, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptSubTransDetails_Result>("RptSubTransDetails", clientIdParameter, startdateParameter, enddateParameter);
        }
    
        public virtual int Sp_TotalRentAmount(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_TotalRentAmount", clientIdParameter);
        }
    
        public virtual int UpdateEftopsDetails(Nullable<int> subTransId, Nullable<decimal> efposAmount, Nullable<decimal> chitsAmount, string comments)
        {
            var subTransIdParameter = subTransId.HasValue ?
                new ObjectParameter("SubTransId", subTransId) :
                new ObjectParameter("SubTransId", typeof(int));
    
            var efposAmountParameter = efposAmount.HasValue ?
                new ObjectParameter("EfposAmount", efposAmount) :
                new ObjectParameter("EfposAmount", typeof(decimal));
    
            var chitsAmountParameter = chitsAmount.HasValue ?
                new ObjectParameter("ChitsAmount", chitsAmount) :
                new ObjectParameter("ChitsAmount", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEftopsDetails", subTransIdParameter, efposAmountParameter, chitsAmountParameter, commentsParameter);
        }
    
        public virtual int UpdateTransDetails(Nullable<int> subTransId, Nullable<decimal> efposAmount, Nullable<decimal> chitsAmount, Nullable<decimal> cashAmount, Nullable<decimal> chequeAmount, string chequeNumber, Nullable<decimal> rentAmount, Nullable<decimal> onlineAmount, Nullable<decimal> advanceAdjustment, Nullable<decimal> loanToDriver, string comments)
        {
            var subTransIdParameter = subTransId.HasValue ?
                new ObjectParameter("SubTransId", subTransId) :
                new ObjectParameter("SubTransId", typeof(int));
    
            var efposAmountParameter = efposAmount.HasValue ?
                new ObjectParameter("EfposAmount", efposAmount) :
                new ObjectParameter("EfposAmount", typeof(decimal));
    
            var chitsAmountParameter = chitsAmount.HasValue ?
                new ObjectParameter("ChitsAmount", chitsAmount) :
                new ObjectParameter("ChitsAmount", typeof(decimal));
    
            var cashAmountParameter = cashAmount.HasValue ?
                new ObjectParameter("CashAmount", cashAmount) :
                new ObjectParameter("CashAmount", typeof(decimal));
    
            var chequeAmountParameter = chequeAmount.HasValue ?
                new ObjectParameter("ChequeAmount", chequeAmount) :
                new ObjectParameter("ChequeAmount", typeof(decimal));
    
            var chequeNumberParameter = chequeNumber != null ?
                new ObjectParameter("ChequeNumber", chequeNumber) :
                new ObjectParameter("ChequeNumber", typeof(string));
    
            var rentAmountParameter = rentAmount.HasValue ?
                new ObjectParameter("RentAmount", rentAmount) :
                new ObjectParameter("RentAmount", typeof(decimal));
    
            var onlineAmountParameter = onlineAmount.HasValue ?
                new ObjectParameter("OnlineAmount", onlineAmount) :
                new ObjectParameter("OnlineAmount", typeof(decimal));
    
            var advanceAdjustmentParameter = advanceAdjustment.HasValue ?
                new ObjectParameter("AdvanceAdjustment", advanceAdjustment) :
                new ObjectParameter("AdvanceAdjustment", typeof(decimal));
    
            var loanToDriverParameter = loanToDriver.HasValue ?
                new ObjectParameter("LoanToDriver", loanToDriver) :
                new ObjectParameter("LoanToDriver", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransDetails", subTransIdParameter, efposAmountParameter, chitsAmountParameter, cashAmountParameter, chequeAmountParameter, chequeNumberParameter, rentAmountParameter, onlineAmountParameter, advanceAdjustmentParameter, loanToDriverParameter, commentsParameter);
        }
    
        public virtual int UpdateSubscriptionDetails(Nullable<int> subscriptionId, Nullable<int> clientId, string terminal, Nullable<int> statusId, Nullable<System.DateTime> subscriptionStartDate, Nullable<decimal> rentAmount, Nullable<int> periodTypeId, string comments, Nullable<decimal> efposServiceCharge, Nullable<decimal> chitsCommission, Nullable<decimal> loanAmount, Nullable<System.DateTime> loanDate)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(int));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var subscriptionStartDateParameter = subscriptionStartDate.HasValue ?
                new ObjectParameter("SubscriptionStartDate", subscriptionStartDate) :
                new ObjectParameter("SubscriptionStartDate", typeof(System.DateTime));
    
            var rentAmountParameter = rentAmount.HasValue ?
                new ObjectParameter("RentAmount", rentAmount) :
                new ObjectParameter("RentAmount", typeof(decimal));
    
            var periodTypeIdParameter = periodTypeId.HasValue ?
                new ObjectParameter("PeriodTypeId", periodTypeId) :
                new ObjectParameter("PeriodTypeId", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var efposServiceChargeParameter = efposServiceCharge.HasValue ?
                new ObjectParameter("EfposServiceCharge", efposServiceCharge) :
                new ObjectParameter("EfposServiceCharge", typeof(decimal));
    
            var chitsCommissionParameter = chitsCommission.HasValue ?
                new ObjectParameter("ChitsCommission", chitsCommission) :
                new ObjectParameter("ChitsCommission", typeof(decimal));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            var loanDateParameter = loanDate.HasValue ?
                new ObjectParameter("LoanDate", loanDate) :
                new ObjectParameter("LoanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSubscriptionDetails", subscriptionIdParameter, clientIdParameter, terminalParameter, statusIdParameter, subscriptionStartDateParameter, rentAmountParameter, periodTypeIdParameter, commentsParameter, efposServiceChargeParameter, chitsCommissionParameter, loanAmountParameter, loanDateParameter);
        }
    
        public virtual int UpdateSubscription(Nullable<int> subscriptionId, Nullable<int> clientId, string terminal, Nullable<int> statusId, Nullable<System.DateTime> subscriptionStartDate, Nullable<decimal> rentAmount, Nullable<int> periodTypeId, Nullable<System.DateTime> subscriptionEndDate, string comments, Nullable<decimal> efposServiceCharge, Nullable<decimal> chitsCommission, Nullable<decimal> loanAmount, Nullable<System.DateTime> loanDate)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(int));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var subscriptionStartDateParameter = subscriptionStartDate.HasValue ?
                new ObjectParameter("SubscriptionStartDate", subscriptionStartDate) :
                new ObjectParameter("SubscriptionStartDate", typeof(System.DateTime));
    
            var rentAmountParameter = rentAmount.HasValue ?
                new ObjectParameter("RentAmount", rentAmount) :
                new ObjectParameter("RentAmount", typeof(decimal));
    
            var periodTypeIdParameter = periodTypeId.HasValue ?
                new ObjectParameter("PeriodTypeId", periodTypeId) :
                new ObjectParameter("PeriodTypeId", typeof(int));
    
            var subscriptionEndDateParameter = subscriptionEndDate.HasValue ?
                new ObjectParameter("SubscriptionEndDate", subscriptionEndDate) :
                new ObjectParameter("SubscriptionEndDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var efposServiceChargeParameter = efposServiceCharge.HasValue ?
                new ObjectParameter("EfposServiceCharge", efposServiceCharge) :
                new ObjectParameter("EfposServiceCharge", typeof(decimal));
    
            var chitsCommissionParameter = chitsCommission.HasValue ?
                new ObjectParameter("ChitsCommission", chitsCommission) :
                new ObjectParameter("ChitsCommission", typeof(decimal));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            var loanDateParameter = loanDate.HasValue ?
                new ObjectParameter("LoanDate", loanDate) :
                new ObjectParameter("LoanDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSubscription", subscriptionIdParameter, clientIdParameter, terminalParameter, statusIdParameter, subscriptionStartDateParameter, rentAmountParameter, periodTypeIdParameter, subscriptionEndDateParameter, commentsParameter, efposServiceChargeParameter, chitsCommissionParameter, loanAmountParameter, loanDateParameter);
        }
    
        public virtual ObjectResult<GetTotalTransPayment1_Result> GetTotalTransPayment1(Nullable<int> subscriptionId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalTransPayment1_Result>("GetTotalTransPayment1", subscriptionIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddLoanTransDetails(Nullable<int> clientId, Nullable<int> subTransId, Nullable<decimal> loanCashAmount, Nullable<decimal> loanChequeAmount, string loanChequeNumber, Nullable<decimal> loanOnlineAmount, Nullable<decimal> loanToDriver, string rentRemarks)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var subTransIdParameter = subTransId.HasValue ?
                new ObjectParameter("SubTransId", subTransId) :
                new ObjectParameter("SubTransId", typeof(int));
    
            var loanCashAmountParameter = loanCashAmount.HasValue ?
                new ObjectParameter("LoanCashAmount", loanCashAmount) :
                new ObjectParameter("LoanCashAmount", typeof(decimal));
    
            var loanChequeAmountParameter = loanChequeAmount.HasValue ?
                new ObjectParameter("LoanChequeAmount", loanChequeAmount) :
                new ObjectParameter("LoanChequeAmount", typeof(decimal));
    
            var loanChequeNumberParameter = loanChequeNumber != null ?
                new ObjectParameter("LoanChequeNumber", loanChequeNumber) :
                new ObjectParameter("LoanChequeNumber", typeof(string));
    
            var loanOnlineAmountParameter = loanOnlineAmount.HasValue ?
                new ObjectParameter("LoanOnlineAmount", loanOnlineAmount) :
                new ObjectParameter("LoanOnlineAmount", typeof(decimal));
    
            var loanToDriverParameter = loanToDriver.HasValue ?
                new ObjectParameter("LoanToDriver", loanToDriver) :
                new ObjectParameter("LoanToDriver", typeof(decimal));
    
            var rentRemarksParameter = rentRemarks != null ?
                new ObjectParameter("RentRemarks", rentRemarks) :
                new ObjectParameter("RentRemarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddLoanTransDetails", clientIdParameter, subTransIdParameter, loanCashAmountParameter, loanChequeAmountParameter, loanChequeNumberParameter, loanOnlineAmountParameter, loanToDriverParameter, rentRemarksParameter);
        }
    
        public virtual ObjectResult<GetChitsPaymentHistory1_Result> GetChitsPaymentHistory1(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChitsPaymentHistory1_Result>("GetChitsPaymentHistory1", clientIdParameter);
        }
    
        public virtual ObjectResult<GetEftposPaymentHistory1_Result> GetEftposPaymentHistory1(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEftposPaymentHistory1_Result>("GetEftposPaymentHistory1", clientIdParameter);
        }
    
        public virtual int GetPaymentHistory(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPaymentHistory", clientIdParameter);
        }
    
        public virtual ObjectResult<GetPaymentHistory1_Result> GetPaymentHistory1(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaymentHistory1_Result>("GetPaymentHistory1", clientIdParameter);
        }
    
        public virtual ObjectResult<GetPaymentsHistory_Result> GetPaymentsHistory(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaymentsHistory_Result>("GetPaymentsHistory", clientIdParameter);
        }
    
        public virtual ObjectResult<GetSubTransPaymentDetails_Result> GetSubTransPaymentDetails(Nullable<int> subTransId)
        {
            var subTransIdParameter = subTransId.HasValue ?
                new ObjectParameter("SubTransId", subTransId) :
                new ObjectParameter("SubTransId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubTransPaymentDetails_Result>("GetSubTransPaymentDetails", subTransIdParameter);
        }
    
        public virtual ObjectResult<spdeleteloan_Result> spdeleteloan(Nullable<int> clientid)
        {
            var clientidParameter = clientid.HasValue ?
                new ObjectParameter("clientid", clientid) :
                new ObjectParameter("clientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spdeleteloan_Result>("spdeleteloan", clientidParameter);
        }
    }
}
